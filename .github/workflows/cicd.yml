name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Validate ECR secrets
        run: |
          if [ -z "${{ secrets.ECR_BACKEND_URI }}" ] || [ -z "${{ secrets.ECR_FRONTEND_URI }}" ]; then
            echo "‚ùå ECR URI secrets not configured"
            exit 1
          fi

      - name: Build and push backend image
        run: |
          docker build -t voterx-backend ./backend
          docker tag voterx-backend:${{ env.IMAGE_TAG }} ${{ secrets.ECR_BACKEND_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.ECR_BACKEND_URI }}:${{ env.IMAGE_TAG }}

      - name: Build and push frontend image
        run: |
          docker build -t voterx-frontend ./frontend
          docker tag voterx-frontend:${{ env.IMAGE_TAG }} ${{ secrets.ECR_FRONTEND_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.ECR_FRONTEND_URI }}:${{ env.IMAGE_TAG }}

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster voterx-cluster \
            --service voterx-service \
            --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
